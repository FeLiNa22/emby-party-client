[{"/home/raul/Desktop/emby-party-client/src/options.js":"1","/home/raul/Desktop/emby-party-client/src/index.js":"2","/home/raul/Desktop/emby-party-client/src/background.js":"3","/home/raul/Desktop/emby-party-client/src/content.js":"4","/home/raul/Desktop/emby-party-client/src/views/Options/App.js":"5","/home/raul/Desktop/emby-party-client/src/views/Popup/App.js":"6","/home/raul/Desktop/emby-party-client/src/views/Sidebar/App.js":"7","/home/raul/Desktop/emby-party-client/src/components/OTP/OTPInput.js":"8","/home/raul/Desktop/emby-party-client/src/components/Chat/EmojiPicker.js":"9","/home/raul/Desktop/emby-party-client/src/components/Chat/Icons.js":"10","/home/raul/Desktop/emby-party-client/src/components/Sidebar/SidebarWidget.js":"11","/home/raul/Desktop/emby-party-client/src/components/Sidebar/Icons.js":"12","/home/raul/Desktop/emby-party-client/src/components/OTP/OTPOutput.js":"13","/home/raul/Desktop/emby-party-client/src/views/Sidebar/User.js":"14","/home/raul/Desktop/emby-party-client/src/components/Sidebar/SidebarCollapseBtn.js":"15","/home/raul/Desktop/emby-party-client/src/video.js":"16","/home/raul/Desktop/emby-party-client/src/views/Video/App.js":"17","/home/raul/Desktop/emby-party-client/src/views/Video/VideoPlayer.js":"18","/home/raul/Desktop/emby-party-client/src/views/Popup/JoinPage/Join.js":"19","/home/raul/Desktop/emby-party-client/src/views/Popup/HomePage/Home.js":"20","/home/raul/Desktop/emby-party-client/src/views/Popup/ConnectedPage/Connected.js":"21","/home/raul/Desktop/emby-party-client/src/controllers/PopupHandler.js":"22","/home/raul/Desktop/emby-party-client/src/views/Popup/ErrorPage/Error.js":"23","/home/raul/Desktop/emby-party-client/src/controllers/BackgroundController.js":"24","/home/raul/Desktop/emby-party-client/src/controllers/UserDataController.js":"25","/home/raul/Desktop/emby-party-client/src/adapters/EmbyPartyAdapter.js":"26","/home/raul/Desktop/emby-party-client/src/components/Sidebar/Sidebar.js":"27","/home/raul/Desktop/emby-party-client/src/views/Sidebar/SidebarChat.js":"28","/home/raul/Desktop/emby-party-client/src/components/Sidebar/Donate.js":"29","/home/raul/Desktop/emby-party-client/src/controllers/SidebarController.js":"30","/home/raul/Desktop/emby-party-client/src/components/Chat/Chat.js":"31","/home/raul/Desktop/emby-party-client/src/controllers/VideoController.js":"32","/home/raul/Desktop/emby-party-client/src/components/Video/NetflixVideo.js":"33","/home/raul/Desktop/emby-party-client/src/components/Video/HTML5VideoAdapter.js":"34","/home/raul/Desktop/emby-party-client/src/components/Video/Video.js":"35"},{"size":209,"mtime":1609539833384,"results":"36","hashOfConfig":"37"},{"size":207,"mtime":1609539833384,"results":"38","hashOfConfig":"37"},{"size":1285,"mtime":1621535122411,"results":"39","hashOfConfig":"37"},{"size":3357,"mtime":1622164130073,"results":"40","hashOfConfig":"37"},{"size":308,"mtime":1621180961963,"results":"41","hashOfConfig":"37"},{"size":2484,"mtime":1621535305875,"results":"42","hashOfConfig":"37"},{"size":2511,"mtime":1622163127242,"results":"43","hashOfConfig":"37"},{"size":3651,"mtime":1621212966918,"results":"44","hashOfConfig":"37"},{"size":1455,"mtime":1609967316286,"results":"45","hashOfConfig":"37"},{"size":3245,"mtime":1609959176507,"results":"46","hashOfConfig":"37"},{"size":1145,"mtime":1621375054783,"results":"47","hashOfConfig":"37"},{"size":586,"mtime":1621365110055,"results":"48","hashOfConfig":"37"},{"size":1278,"mtime":1621203067171,"results":"49","hashOfConfig":"37"},{"size":3790,"mtime":1621098361583,"results":"50","hashOfConfig":"37"},{"size":428,"mtime":1621378277899,"results":"51","hashOfConfig":"37"},{"size":226,"mtime":1610971470475,"results":"52","hashOfConfig":"37"},{"size":419,"mtime":1622164890548,"results":"53","hashOfConfig":"37"},{"size":316,"mtime":1622133807190,"results":"54","hashOfConfig":"37"},{"size":1275,"mtime":1621255396547,"results":"55","hashOfConfig":"37"},{"size":906,"mtime":1621255413092,"results":"56","hashOfConfig":"37"},{"size":1873,"mtime":1621534446551,"results":"57","hashOfConfig":"37"},{"size":1525,"mtime":1621810061115,"results":"58","hashOfConfig":"37"},{"size":482,"mtime":1621258612545,"results":"59","hashOfConfig":"37"},{"size":2810,"mtime":1621815319763,"results":"60","hashOfConfig":"37"},{"size":274,"mtime":1621278433284,"results":"61","hashOfConfig":"37"},{"size":4655,"mtime":1622160304529,"results":"62","hashOfConfig":"37"},{"size":689,"mtime":1621377393424,"results":"63","hashOfConfig":"37"},{"size":2778,"mtime":1621817651257,"results":"64","hashOfConfig":"37"},{"size":301,"mtime":1621550556273,"results":"65","hashOfConfig":"37"},{"size":2128,"mtime":1621817280166,"results":"66","hashOfConfig":"37"},{"size":3453,"mtime":1621551785788,"results":"67","hashOfConfig":"37"},{"size":712,"mtime":1622166173930,"results":"68","hashOfConfig":"37"},{"size":143,"mtime":1622166568230,"results":"69","hashOfConfig":"37"},{"size":2187,"mtime":1622167087975,"results":"70","hashOfConfig":"37"},{"size":325,"mtime":1622166532282,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"10o8rmz",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"87","usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"117","usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"120","usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"123","usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"128","usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"149","usedDeprecatedRules":"74"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"/home/raul/Desktop/emby-party-client/src/options.js",[],["156","157"],"/home/raul/Desktop/emby-party-client/src/index.js",[],"/home/raul/Desktop/emby-party-client/src/background.js",["158"],"import { BackgroundController } from \"./controllers/BackgroundController\";\nimport { UserDataController } from \"./controllers/UserDataController\";\n\n// controller holds handler functions\nconst backgroundController = new BackgroundController();\nconst userDataController = new UserDataController();\n\nsetupBackgroundListeners();\n\n\nfunction setupBackgroundListeners() {\n  chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n    // only accept messages sent from popup\n    if (sender.tab === undefined) {\n      if (message.state === \"popup:join\") {\n        // on joining a party create a new tab and join the party there\n        backgroundController.handleJoiningParty(message, sender, sendResponse);\n      } else if (message.state === \"popup:create\") {\n        // on creating a party check if there is a video to share on\n        // the page and then inject sidebar and controller code into the page\n        backgroundController.handleCreatingParty(message, sender, sendResponse);\n      } else if (message.state === \"popup:get\") {\n        // on getting party, check if the page has injected code,\n        // and check if there is a connection there\n        backgroundController.handleGettingParty(message, sender, sendResponse);\n      }\n    }\n    return true;\n  });\n}\n\n","/home/raul/Desktop/emby-party-client/src/content.js",["159","160"],"/*global chrome*/\nimport { Member } from \"./adapters/EmbyPartyAdapter\";\n\nimport ReactDOM from \"react-dom\";\nimport { VideoController } from \"./controllers/VideoController\";\nimport App from \"./views/Sidebar/App\";\nimport { HTML5VideoAdapter } from \"./components/Video/HTML5VideoAdapter\";\nimport { NetflixVideo } from \"./components/Video/NetflixVideo\";\n\nif (!window.ALREADY_INJECTED_FLAG) {\n  window.ALREADY_INJECTED_FLAG = true;\n  const member = new Member();\n  // get controllable video object depending on the site\n  const video = getVideo();\n  const videoController = new VideoController(member, video);\n  // join party if code is passed in the url\n  joinPartyIfCodePassedInUrlParameters(member, video);\n  // setup chrome event listeners to handle get/join/create party events\n  setupContentListeners(member, video);\n}\n\nfunction getVideo() {\n  const url = window.location.href;\n  if (url.includes(\"netflix\")) {\n    return new NetflixVideo();\n  } else {\n    return new HTML5VideoAdapter();\n  }\n}\n\nfunction joinPartyIfCodePassedInUrlParameters(\n  member,\n  video\n) {\n  const queryString = window.location.search;\n  const urlParams = new URLSearchParams(queryString);\n  const partyId = urlParams.get(\"party\");\n  member\n    .joinParty(partyId)\n    .then((party) => {\n      injectCSS();\n      injectSidebar(member);\n      video.update(party.video);\n    })\n    .catch((ignore) => {});\n}\n\nfunction injectCSS() {\n  var link = document.createElement(\"link\");\n  link.href = chrome.runtime.getURL(\"/static/css/content.css\");\n  link.type = \"text/css\";\n  link.rel = \"stylesheet\";\n\n  document.getElementsByTagName(\"head\")[0].appendChild(link);\n}\n\nfunction injectSidebar(member) {\n  const injection = document.createElement(\"div\");\n\n  // injects the sidebar into the page\n  document.body.appendChild(injection);\n\n  // render component\n  ReactDOM.render(<App member={member} />, injection);\n}\n\nfunction setupContentListeners(member, video) {\n  chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n    // only accept messages sent from background\n    if (sender.tab === undefined) {\n      if (message.state === \"content:join\") {\n        const { partyId } = message;\n        member\n          .joinParty(partyId)\n          .then((party) => {\n            sendResponse(party);\n            video.update(party.video);\n          })\n          .then(() => {\n            injectCSS();\n            injectSidebar(member);\n          })\n          .catch((err) => sendResponse(err));\n      } else if (message.state === \"content:create\") {\n        // on creating a party check if there is a video to share on\n        // the page and then inject sidebar and controller code into the page\n        member\n          .createParty()\n          .then((party) => {\n            sendResponse(party);\n            member.updateVideo(party.id, video);\n          })\n          .then(() => {\n            injectCSS();\n            injectSidebar(member);\n          })\n          .catch((err) => sendResponse(err));\n      } else if (message.state === \"content:get\") {\n        // on getting party, check if the page has injected code,\n        // and check if there is a connection there\n        if (member.isInParty()) {\n          sendResponse(member.getParty());\n        } else {\n          sendResponse({ error: \"Not connected to a party\" });\n        }\n      }\n    }\n    return true;\n  });\n}\n","/home/raul/Desktop/emby-party-client/src/views/Options/App.js",[],"/home/raul/Desktop/emby-party-client/src/views/Popup/App.js",["161"],"\"use strict\";\n\nimport React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport { Home } from \"./HomePage/Home\";\nimport { Join } from \"./JoinPage/Join\";\nimport { Connected } from \"./ConnectedPage/Connected\";\nimport { Error } from \"./ErrorPage/Error\";\nimport { PopupHandler } from \"../../controllers/PopupHandler\";\n\nclass App extends Component {\n  controller;\n  static_home;\n  state;\n\n  constructor(props) {\n    super(props);\n\n    // intialise controller object\n    this.controller = new PopupHandler();\n\n    // home view is static component so\n    // it can be pre-rendered\n    this.static_home = (\n      <Home\n        onCreateClicked={() => this.controller.createParty(this.onCreatedParty)}\n        onJoinClicked={this.switchToJoinPage}\n      />\n    );\n\n    this.static_join = (\n      <Join\n        ref={(ref) => (this.joinRef = ref)}\n        onJoinPartyClicked={(partyId) =>\n          this.controller.joinParty(partyId, this.onJoinedParty)\n        }\n      />\n    );\n\n    // initial state\n    this.state = {\n      view: this.static_home,\n    };\n  }\n\n  onCreatedParty = (party) => {\n    if (!party.error) {\n      // if party created succesfully\n      this.setState({ view: <Connected party={party} /> });\n    } else {\n      // if party failed to be created\n      this.setState({\n        view: (\n          <Error\n            error={party.error}\n            tryAgain={() => this.setState({ view: this.static_home })}\n          />\n        ),\n      });\n    }\n  };\n\n  onJoinedParty = (party) => {\n    if (!party.error) {\n      // if party joined/created succesfully\n      this.setState({ view: <Connected party={party} /> });\n    } else {\n      if (party.code === 100) {\n        // if party doesnt exist just send error to join view\n        this.joinRef.setState({ error: party.error });\n      } else {\n        // if failed to join party\n        this.setState({\n          view: (\n            <Error\n              error={party.error}\n              tryAgain={() => this.setState({ view: this.static_join })}\n            />\n          ),\n        });\n      }\n    }\n  };\n\n  switchToJoinPage = () => {\n    this.setState({ view: this.static_join });\n  };\n\n  componentDidMount = () => {\n    // check if tab has already established a connection\n    this.controller.getParty((party) => {\n      if (!party.error) {\n        this.setState({ view: <Connected party={party} /> });\n      }\n    });\n  };\n\n  render() {\n    return <div className=\"App\">{this.state.view}</div>;\n  }\n}\n\nexport default App;\n","/home/raul/Desktop/emby-party-client/src/views/Sidebar/App.js",[],"/home/raul/Desktop/emby-party-client/src/components/OTP/OTPInput.js",[],"/home/raul/Desktop/emby-party-client/src/components/Chat/EmojiPicker.js",[],"/home/raul/Desktop/emby-party-client/src/components/Chat/Icons.js",[],["162","163"],"/home/raul/Desktop/emby-party-client/src/components/Sidebar/SidebarWidget.js",[],"/home/raul/Desktop/emby-party-client/src/components/Sidebar/Icons.js",[],"/home/raul/Desktop/emby-party-client/src/components/OTP/OTPOutput.js",[],"/home/raul/Desktop/emby-party-client/src/views/Sidebar/User.js",[],["164","165"],"/home/raul/Desktop/emby-party-client/src/components/Sidebar/SidebarCollapseBtn.js",[],"/home/raul/Desktop/emby-party-client/src/video.js",["166","167"],"/*global chrome*/\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './views/Video/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n); \n","/home/raul/Desktop/emby-party-client/src/views/Video/App.js",[],"/home/raul/Desktop/emby-party-client/src/views/Video/VideoPlayer.js",[],"/home/raul/Desktop/emby-party-client/src/views/Popup/JoinPage/Join.js",["168"],"\"use strict\";\n\nimport { Component } from \"react\";\nimport \"./../App.css\";\nimport OTPInput from \"../../../components/OTP/OTPInput\";\nexport class Join extends Component {\n  constructor(props) {\n    super(props);\n\n    const { onJoinPartyClicked } = props;\n    this.onJoinPartyClicked = onJoinPartyClicked;\n    this.state = {\n      error: null,\n    };\n  }\n\n  clearErrors = () => {\n    this.setState({ error: null });\n  };\n\n  render = () => {\n    return (\n      <>\n        <div className=\"App-view\">\n          <p class={\"code-info\"} style={{ margin: \"10px auto\" }}>\n            Get the code for the party you would like to join, any member of the\n            party will be able to share this with you. You can then join the\n            party by pasting the code below, and clicking join.\n          </p>\n          <OTPInput\n            numInputs={6}\n            submitButton={\n              <button style={{ width: \"90%\" }} className=\"App-button\">\n                Join Party\n              </button>\n            }\n            onChange={this.clearErrors}\n            onSubmit={(partyId) => this.onJoinPartyClicked(partyId)}\n          />\n          {this.state.error ? (\n            <p className=\"error\">{this.state.error}</p>\n          ) : null}\n        </div>\n      </>\n    );\n  };\n}\n","/home/raul/Desktop/emby-party-client/src/views/Popup/HomePage/Home.js",["169","170","171"],"\"use strict\";\n\nimport { Component } from \"react\";\nimport \"./../App.css\";\nimport logo from \"../../../assets/emby.png\";\n\nexport class Home extends Component {\n  state = { error: null };\n\n  constructor(props) {\n    super(props);\n    const { onCreateClicked, onJoinClicked } = props;\n  }\n\n  render = () => {\n    return (\n      <>\n        <div className=\"App-header\" display=\"block\">\n          <img src={logo} className=\"App-icon\" alt=\"Emby Party\" />\n          <h1 style={{margin : \"5px auto\"}}>Emby Party</h1>\n        </div>\n        <p className=\"App-info\">Start watching movies together</p>\n        <div className=\"App-view\">\n          <button className=\"App-button\" onClick={this.props.onCreateClicked}>\n            Create Party\n          </button>\n          <button className=\"App-button\" onClick={this.props.onJoinClicked}>\n            Join Party\n          </button>\n        </div>\n      </>\n    );\n  };\n}\n","/home/raul/Desktop/emby-party-client/src/views/Popup/ConnectedPage/Connected.js",["172"],"\"use strict\";\n\nimport { Component } from \"react\";\nimport \"./../App.css\";\nimport OTPOutput from \"../../../components/OTP/OTPOutput\";\n\nexport class Connected extends Component {\n  state = {\n    copyState: false,\n  };\n\n  constructor(props) {\n    super(props);\n    const { party } = props;\n    const { id, video, members } = party;\n    this.partyId = id;\n    this.video = video ? video.name : \"Nothing\";\n    this.members = members.map((member) => (\n      <li class={\"member\"}>{member.name}</li>\n    ));\n  }\n\n  copyToClipboard = (text) => {\n    navigator.clipboard.writeText(text);\n    this.setState({ copyState: true });\n  };\n\n  render = () => {\n    return (\n      <>\n        <div className=\"App-view left\">\n          <h1 style={{ display: \"inline-block\" }} class={\"highlight\"}>\n            Currently Watching :\n          </h1>{\" \"}\n          <h1 style={{ display: \"inline-block\" }} class={\"video-title\"}>\n            {this.video}\n          </h1>\n        </div>\n\n        <div className=\"App-view\">\n          <p class={\"code-info\"} style={{ \"margin\": \"10px auto\" }}>\n            Share the CODE below with others. \n            The recipient(s) can then join the party using the Emby Party extension.\n          </p>\n          <OTPOutput\n            numOutputs={6}\n            output={this.partyId}\n            submitButton={\n              <button className=\"App-button\" style={{ width: \"90%\" }}>\n                {this.state.copyState ? \"Copied\" : \"Copy to clipboard\"}\n              </button>\n            }\n            onSubmit={(partyId) => this.copyToClipboard(partyId)}\n          />\n        </div>\n\n        {/* list all members here */}\n        <div className=\"App-view left\">\n          <h1 class={\"highlight\"}>Members</h1>\n          <ul style={{ \"list-style-type\": \"none\", \"padding-left\": 0 }}>\n            {this.members}\n          </ul>\n        </div>\n      </>\n    );\n  };\n}\n","/home/raul/Desktop/emby-party-client/src/controllers/PopupHandler.js",[],"/home/raul/Desktop/emby-party-client/src/views/Popup/ErrorPage/Error.js",["173"],"'use strict';\n\nimport { Component } from \"react\";\nimport \"./../App.css\";\n\nexport class Error extends Component {\n  \n    constructor(props) {\n    super(props);\n    const { error, tryAgain } = props;\n    this.tryAgain = tryAgain;\n    this.error = error;\n  }\n\n  render = () => {\n    return (\n      <>\n        <button className=\"App-button\" onClick={this.tryAgain}>Try Again</button>\n        <p className=\"error\" style={{textAlign : \"center\"}}>{this.error}</p>\n      </>\n    );\n  };\n\n}\n","/home/raul/Desktop/emby-party-client/src/controllers/BackgroundController.js",[],"/home/raul/Desktop/emby-party-client/src/controllers/UserDataController.js",[],"/home/raul/Desktop/emby-party-client/src/adapters/EmbyPartyAdapter.js",[],"/home/raul/Desktop/emby-party-client/src/components/Sidebar/Sidebar.js",[],"/home/raul/Desktop/emby-party-client/src/views/Sidebar/SidebarChat.js",["174","175","176","177","178","179","180","181","182","183"],"// chat app\nimport { Component } from \"react\";\nimport Chat from \"../../components/Chat/Chat\";\n\n// import custom css for chat\nimport \"./SidebarChat.css\";\n\nconst message_type = {\n  ALERT: \"alert\",\n  BROADCAST: \"broadcast\",\n  WHISPER: \"whisper\",\n};\n\nclass SidebarChat extends Component {\n  constructor(props) {\n    super(props);\n    const { controller } = props;\n    this.controller = controller; // sidebar controller\n  }\n\n  onSendMessage = (text) => {\n    var message = { date: new Date(), text };\n    this.controller.sendMessage(message);\n  };\n\n  setupInitialChat = () => {\n    for (var member of this.controller.getPartyMembers()) {\n      if (!this.controller.isMe(member)) {\n        this.addAlertMessage(member.name + \" is in the party\");\n      }\n    }\n    this.addAlertMessage(\"You joined the party\");\n  };\n\n  componentDidMount = () => {\n    this.setupInitialChat();\n\n    this.controller.setOnBroadcast(this.addUserMessage);\n\n    this.controller.setOnWhisper(this.addWhisperedMessage);\n\n    this.controller.setOnAlert(this.addAlertMessage);\n\n    this.controller.setOnDelete(this.removeMessage);\n\n    this.controller.setOnUserJoin((user) => {\n      this.addAlertMessage(\n        (this.controller.isMe(user) ? \"You\" : user.name) + \" joined the party\"\n      );\n    });\n\n    this.controller.setOnUserLeft((user) => {\n      this.addAlertMessage(\n        (this.controller.isMe(user) ? \"You\" : user.name) + \" left the party\"\n      );\n    });\n  };\n\n  removeMessage = (message) => {\n    const { id: m_id, text, date } = message;\n    this.chatRef.removeMessage(m_id);\n  };\n\n  addAlertMessage = (message) => {\n    const { id: m_id, text, date } = message;\n    this.chatRef.addMessage(\n      m_id,\n      <div className=\"SidebarChat-message SidebarChat-broadcast\">\n        <p>{message}</p>\n      </div>\n    );\n  };\n\n  addWhisperedMessage = (user, message) => {\n    const { id: u_id, name } = user;\n    const { id: m_id, text, date } = message;\n    this.chatRef.addMessage(\n      m_id,\n      <div className=\"SidebarChat-message SidebarChat-local\">\n        <p>{name} whispered</p>\n        <p>{message}</p>\n      </div>\n    );\n  };\n\n  addUserMessage = (user, message) => {\n    const { id: u_id, name } = user;\n    const { id: m_id, text, date } = message;\n    this.chatRef.addMessage(\n      m_id,\n      <div\n        className={`SidebarChat-message SidebarChat-user ${\n          this.controller.isMe(user) ? \"me\" : \"other\"\n        }`}\n      >\n        <p className=\"SidebarChat-user-name\">\n          {this.controller.isMe(user) ? \"You\" : name} said\n        </p>\n        <p>{text}</p>\n      </div>\n    );\n  };\n\n  render = () => {\n    return (\n      <Chat\n        ref={(ref) => (this.chatRef = ref)}\n        onSendMessage={this.onSendMessage}\n      />\n    );\n  };\n}\n\nexport default SidebarChat;\n","/home/raul/Desktop/emby-party-client/src/components/Sidebar/Donate.js",[],"/home/raul/Desktop/emby-party-client/src/controllers/SidebarController.js",[],"/home/raul/Desktop/emby-party-client/src/components/Chat/Chat.js",["184","185"],"import { Component } from \"react\";\nimport \"./Chat.css\";\n\nimport EmojiPicker from \"./EmojiPicker\";\nimport { SendIcon } from \"./Icons\";\n\nclass Title extends Component {\n  static defaultProps = {\n    title: \"\",\n  };\n\n  render() {\n    return (\n      <div className=\"Chat-title\">\n        <h1>{this.props.title}</h1>\n      </div>\n    );\n  }\n}\n\nclass SendMessageForm extends Component {\n  static defaultProps = {\n    placeholder: \"Send a message...\",\n    onSendMessage: (text) => {\n      console.log(text);\n    },\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEmojiPickerMounted: false,\n    };\n  }\n\n  handleSend = (e) => {\n    e.preventDefault();\n    // only trigger send if input is not all whitespace\n    if (this.inputRef.value.replace(/\\s/g, \"\").length) {\n      this.props.onSendMessage(this.inputRef.value);\n      // clear input\n      this.inputRef.value = \"\";\n    }\n  };\n\n  handleKeyDown = (e) => {\n    switch (e.key) {\n      // if enter is pressed send the message\n      case \"Enter\":\n        this.handleSend(e);\n        break;\n      default:\n        break;\n    }\n  };\n\n  onSelectEmoji = (emoji) => {\n    this.inputRef.value += emoji.native;\n  };\n\n  render() {\n    return (\n      <div className=\"Chat-sendForm\">\n        <EmojiPicker onSelectEmoji={this.onSelectEmoji} />\n        <input\n          placeholder={this.props.placeholder}\n          type=\"text\"\n          className=\"Chat-input\"\n          maxLength=\"300\"\n          ref={(ref) => {\n            this.inputRef = ref;\n          }}\n          onKeyDown={this.handleKeyDown}\n        ></input>\n        <button className=\"Chat-button\" onClick={this.handleSend}>\n          <SendIcon style={{ color: \"#63ce50\" }} />\n        </button>\n      </div>\n    );\n  }\n}\n\nclass Messages extends Component {\n  static defaultProps = {\n    messages: [], // array type => [{id, html}]\n  };\n\n  constructor(props) {\n    super(props);\n    // I have allowed passing existiong message through props\n    // to support stateful messaging\n    this.state = { messages: this.props.messages };\n  }\n\n  componentDidMount = () => {\n    this.scrollToBottom();\n  };\n\n  componentDidUpdate = () => {\n    this.scrollToBottom();\n  };\n\n  scrollToBottom = () => {\n    this.messagesEndRef.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  addMessage = (id, html) => {\n    this.setState((prevState) => ({\n      messages: prevState.messages.concat({ id, html }),\n    }));\n  };\n\n  removeMessage = (id) => {\n    this.setState((prevState) => ({\n      messages: prevState.messages.filter((msg) => msg.id !== id),\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"Chat-container\">\n        {this.state.messages.map((msg) => msg.html)}\n        <div\n          style={{ float: \"left\", clear: \"both\" }}\n          ref={(ref) => (this.messagesEndRef = ref)}\n        />\n      </div>\n    );\n  }\n}\n\n/* The chat app requires only the onSendMessage function */\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    const { title, onSendMessage } = props;\n  }\n\n  addMessage = (id, message) => {\n    this.messagesRef.addMessage(id, message);\n  };\n\n  removeMessage = (id) => {\n    this.messagesRef.removeMessage(id);\n  };\n\n  render() {\n    return (\n      <div className=\"Chat-app\">\n        <Title title={this.props.title} />\n        <Messages ref={(ref) => (this.messagesRef = ref)} />\n        <SendMessageForm onSendMessage={this.props.onSendMessage} />\n      </div>\n    );\n  }\n}\n\nexport default Chat;\n","/home/raul/Desktop/emby-party-client/src/controllers/VideoController.js",["186"],"\"use strict\";\n\nexport class VideoController {\n  member;\n  video;\n\n  constructor(member, video) {\n    this.member = member;\n    this.video = video;\n    // setup event listeners on the video object\n    this.setupVideoEventListeners();\n  }\n\n  setupVideoEventListeners = () => {\n    // broadcast updates to other member of party\n    this.video.setOnUpdate((video) => {\n      const party = this.member.getParty();\n      if (party) {\n        this.member.updateVideo(party.id, video);\n      }\n    });\n\n    // update own video on receiving an update\n    this.member.setOnVideoUpdateListener((party, video) => {\n      if (this.member.getParty().id === party.id) {\n        this.video.update(video);\n      }\n    });\n  };\n}\n","/home/raul/Desktop/emby-party-client/src/components/Video/NetflixVideo.js",[],"/home/raul/Desktop/emby-party-client/src/components/Video/HTML5VideoAdapter.js",["187","188","189","190"],"/home/raul/Desktop/emby-party-client/src/components/Video/Video.js",[],{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":6,"column":7,"nodeType":"197","messageId":"198","endLine":6,"endColumn":25},{"ruleId":"199","severity":1,"message":"200","line":1,"column":10,"nodeType":"201","messageId":"202","endLine":1,"endColumn":16},{"ruleId":"195","severity":1,"message":"203","line":15,"column":9,"nodeType":"197","messageId":"198","endLine":15,"endColumn":24},{"ruleId":"204","severity":1,"message":"205","line":1,"column":1,"nodeType":"206","messageId":"207","endLine":1,"endColumn":14,"fix":"208"},{"ruleId":"191","replacedBy":"209"},{"ruleId":"193","replacedBy":"210"},{"ruleId":"191","replacedBy":"211"},{"ruleId":"193","replacedBy":"212"},{"ruleId":"199","severity":1,"message":"200","line":1,"column":10,"nodeType":"201","messageId":"202","endLine":1,"endColumn":16},{"ruleId":"195","severity":1,"message":"213","line":1,"column":10,"nodeType":"214","messageId":"198","endLine":1,"endColumn":16},{"ruleId":"204","severity":1,"message":"205","line":1,"column":1,"nodeType":"206","messageId":"207","endLine":1,"endColumn":14,"fix":"215"},{"ruleId":"204","severity":1,"message":"205","line":1,"column":1,"nodeType":"206","messageId":"207","endLine":1,"endColumn":14,"fix":"216"},{"ruleId":"195","severity":1,"message":"217","line":12,"column":13,"nodeType":"197","messageId":"198","endLine":12,"endColumn":28},{"ruleId":"195","severity":1,"message":"218","line":12,"column":30,"nodeType":"197","messageId":"198","endLine":12,"endColumn":43},{"ruleId":"204","severity":1,"message":"205","line":1,"column":1,"nodeType":"206","messageId":"207","endLine":1,"endColumn":14,"fix":"219"},{"ruleId":"204","severity":1,"message":"205","line":1,"column":1,"nodeType":"206","messageId":"207","endLine":1,"endColumn":14,"fix":"220"},{"ruleId":"195","severity":1,"message":"221","line":8,"column":7,"nodeType":"197","messageId":"198","endLine":8,"endColumn":19},{"ruleId":"195","severity":1,"message":"222","line":60,"column":23,"nodeType":"197","messageId":"198","endLine":60,"endColumn":27},{"ruleId":"195","severity":1,"message":"223","line":60,"column":29,"nodeType":"197","messageId":"198","endLine":60,"endColumn":33},{"ruleId":"195","severity":1,"message":"222","line":65,"column":23,"nodeType":"197","messageId":"198","endLine":65,"endColumn":27},{"ruleId":"195","severity":1,"message":"223","line":65,"column":29,"nodeType":"197","messageId":"198","endLine":65,"endColumn":33},{"ruleId":"195","severity":1,"message":"224","line":75,"column":17,"nodeType":"197","messageId":"198","endLine":75,"endColumn":21},{"ruleId":"195","severity":1,"message":"222","line":76,"column":23,"nodeType":"197","messageId":"198","endLine":76,"endColumn":27},{"ruleId":"195","severity":1,"message":"223","line":76,"column":29,"nodeType":"197","messageId":"198","endLine":76,"endColumn":33},{"ruleId":"195","severity":1,"message":"224","line":87,"column":17,"nodeType":"197","messageId":"198","endLine":87,"endColumn":21},{"ruleId":"195","severity":1,"message":"223","line":88,"column":29,"nodeType":"197","messageId":"198","endLine":88,"endColumn":33},{"ruleId":"195","severity":1,"message":"225","line":137,"column":13,"nodeType":"197","messageId":"198","endLine":137,"endColumn":18},{"ruleId":"195","severity":1,"message":"226","line":137,"column":20,"nodeType":"197","messageId":"198","endLine":137,"endColumn":33},{"ruleId":"204","severity":1,"message":"205","line":1,"column":1,"nodeType":"206","messageId":"207","endLine":1,"endColumn":14,"fix":"227"},{"ruleId":"228","severity":1,"message":"229","line":44,"column":21,"nodeType":"230","messageId":"231","endLine":44,"endColumn":32},{"ruleId":"195","severity":1,"message":"232","line":65,"column":24,"nodeType":"197","messageId":"198","endLine":65,"endColumn":36},{"ruleId":"195","severity":1,"message":"233","line":65,"column":46,"nodeType":"197","messageId":"198","endLine":65,"endColumn":53},{"ruleId":"195","severity":1,"message":"234","line":65,"column":55,"nodeType":"197","messageId":"198","endLine":65,"endColumn":64},"no-native-reassign",["235"],"no-negated-in-lhs",["236"],"no-unused-vars","'userDataController' is assigned a value but never used.","Identifier","unusedVar","no-redeclare","'chrome' is already defined as a built-in global variable.","Block","redeclaredAsBuiltin","'videoController' is assigned a value but never used.","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"237","text":"238"},["235"],["236"],["235"],["236"],"'chrome' is defined but never used.","Program",{"range":"239","text":"238"},{"range":"240","text":"238"},"'onCreateClicked' is assigned a value but never used.","'onJoinClicked' is assigned a value but never used.",{"range":"241","text":"238"},{"range":"242","text":"238"},"'message_type' is assigned a value but never used.","'text' is assigned a value but never used.","'date' is assigned a value but never used.","'u_id' is assigned a value but never used.","'title' is assigned a value but never used.","'onSendMessage' is assigned a value but never used.",{"range":"243","text":"238"},"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'playbackRate' is assigned a value but never used.","'seeking' is assigned a value but never used.","'subtitles' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[0,13],"",[0,13],[0,13],[0,13],[0,13],[0,13]]
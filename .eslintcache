[{"/home/raul/Desktop/emby-party-client/src/options.js":"1","/home/raul/Desktop/emby-party-client/src/index.js":"2","/home/raul/Desktop/emby-party-client/src/background.js":"3","/home/raul/Desktop/emby-party-client/src/content.js":"4","/home/raul/Desktop/emby-party-client/src/views/Options/App.js":"5","/home/raul/Desktop/emby-party-client/src/views/Popup/App.js":"6","/home/raul/Desktop/emby-party-client/src/views/Sidebar/App.js":"7","/home/raul/Desktop/emby-party-client/src/components/Chat/ChatApp.js":"8","/home/raul/Desktop/emby-party-client/src/components/OTP/OTPInput.js":"9","/home/raul/Desktop/emby-party-client/src/components/Chat/EmojiPicker.js":"10","/home/raul/Desktop/emby-party-client/src/components/Chat/Icons.js":"11","/home/raul/Desktop/emby-party-client/src/components/Sidebar/SidebarWidget.js":"12","/home/raul/Desktop/emby-party-client/src/components/Sidebar/Icons.js":"13","/home/raul/Desktop/emby-party-client/src/components/OTP/OTPOutput.js":"14","/home/raul/Desktop/emby-party-client/src/views/Sidebar/User.js":"15","/home/raul/Desktop/emby-party-client/src/views/Sidebar/Sidebar.js":"16","/home/raul/Desktop/emby-party-client/src/components/Sidebar/SidebarCollapseBtn.js":"17","/home/raul/Desktop/emby-party-client/src/video.js":"18","/home/raul/Desktop/emby-party-client/src/views/Video/App.js":"19","/home/raul/Desktop/emby-party-client/src/views/Video/VideoPlayer.js":"20","/home/raul/Desktop/emby-party-client/src/views/Popup/JoinPage/Join.js":"21","/home/raul/Desktop/emby-party-client/src/views/Popup/HomePage/Home.js":"22","/home/raul/Desktop/emby-party-client/src/views/Popup/ConnectedPage/Connected.js":"23","/home/raul/Desktop/emby-party-client/src/controllers/PopupHandler.js":"24","/home/raul/Desktop/emby-party-client/src/views/Popup/ErrorPage/Error.js":"25","/home/raul/Desktop/emby-party-client/src/controllers/BackgroundController.js":"26","/home/raul/Desktop/emby-party-client/src/controllers/UserDataController.js":"27","/home/raul/Desktop/emby-party-client/src/adapters/EmbyPartyAdapter.js":"28"},{"size":209,"mtime":1609539833384,"results":"29","hashOfConfig":"30"},{"size":207,"mtime":1609539833384,"results":"31","hashOfConfig":"30"},{"size":1203,"mtime":1621284810153,"results":"32","hashOfConfig":"30"},{"size":598,"mtime":1621257358502,"results":"33","hashOfConfig":"30"},{"size":308,"mtime":1621180961963,"results":"34","hashOfConfig":"30"},{"size":2537,"mtime":1621285923467,"results":"35","hashOfConfig":"30"},{"size":3572,"mtime":1611003482713,"results":"36","hashOfConfig":"30"},{"size":2795,"mtime":1610930453008,"results":"37","hashOfConfig":"30"},{"size":3651,"mtime":1621212966918,"results":"38","hashOfConfig":"30"},{"size":1455,"mtime":1609967316286,"results":"39","hashOfConfig":"30"},{"size":3245,"mtime":1609959176507,"results":"40","hashOfConfig":"30"},{"size":1192,"mtime":1611002553658,"results":"41","hashOfConfig":"30"},{"size":586,"mtime":1609902854969,"results":"42","hashOfConfig":"30"},{"size":1278,"mtime":1621203067171,"results":"43","hashOfConfig":"30"},{"size":3790,"mtime":1621098361583,"results":"44","hashOfConfig":"30"},{"size":2950,"mtime":1610936058603,"results":"45","hashOfConfig":"30"},{"size":458,"mtime":1610842657910,"results":"46","hashOfConfig":"30"},{"size":226,"mtime":1610971470475,"results":"47","hashOfConfig":"30"},{"size":295,"mtime":1610972177229,"results":"48","hashOfConfig":"30"},{"size":1141,"mtime":1611002252189,"results":"49","hashOfConfig":"30"},{"size":1275,"mtime":1621255396547,"results":"50","hashOfConfig":"30"},{"size":906,"mtime":1621255413092,"results":"51","hashOfConfig":"30"},{"size":1897,"mtime":1621255389851,"results":"52","hashOfConfig":"30"},{"size":1410,"mtime":1621286657416,"results":"53","hashOfConfig":"30"},{"size":482,"mtime":1621258612545,"results":"54","hashOfConfig":"30"},{"size":2420,"mtime":1621285463237,"results":"55","hashOfConfig":"30"},{"size":274,"mtime":1621278433284,"results":"56","hashOfConfig":"30"},{"size":2421,"mtime":1621286213491,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"10o8rmz",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"107","usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"110","usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/home/raul/Desktop/emby-party-client/src/options.js",[],["126","127"],"/home/raul/Desktop/emby-party-client/src/index.js",[],"/home/raul/Desktop/emby-party-client/src/background.js",["128"],"import { BackgroundController } from \"./controllers/BackgroundController\";\nimport { UserDataController } from \"./controllers/UserDataController\";\n\n// controller holds handler functions\nconst backgroundController = new BackgroundController();\nconst userDataController = new UserDataController();\n\n// listen for join event\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n  // only accept messages sent from popup\n  if (sender.tab === undefined) {\n    if (message.state === \"popup:join\") {\n      // on joining a party create a new tab and join the party there\n      backgroundController.handleJoiningParty(message, sender, sendResponse);\n    } else if (message.state === \"popup:create\") {\n      // on creating a party check if there is a video to share on\n      // the page and then inject sidebar and controller code into the page\n      backgroundController.handleCreatingParty(message, sender, sendResponse);\n    } else if (message.state === \"popup:get\") {\n      // on getting party, check if the page has injected code,\n      // and check if there is a connection there\n      backgroundController.handleGettingParty(message, sender, sendResponse);\n    }\n  }\n  return true;\n});\n","/home/raul/Desktop/emby-party-client/src/content.js",["129"],"/*global chrome*/\n\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./views/Sidebar/App\";\n\nfunction injectCSS() {\n  var link = document.createElement(\"link\");\n  link.href = chrome.runtime.getURL(\"/static/css/content.css\");\n  link.type = \"text/css\";\n  link.rel = \"stylesheet\";\n\n  document.getElementsByTagName(\"head\")[0].appendChild(link);\n}\n\nfunction injectSidebar() {\n  const injection = document.createElement(\"div\");\n\n  // injects the sidebar into the page\n  document.body.appendChild(injection);\n\n  // render component\n  ReactDOM.render(<App/>, injection);\n}\n\ninjectCSS();\ninjectSidebar();\n\n","/home/raul/Desktop/emby-party-client/src/views/Options/App.js",[],"/home/raul/Desktop/emby-party-client/src/views/Popup/App.js",["130"],"\"use strict\";\n\nimport React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport { Home } from \"./HomePage/Home\";\nimport { Join } from \"./JoinPage/Join\";\nimport { Connected } from \"./ConnectedPage/Connected\";\nimport { Error } from \"./ErrorPage/Error\";\nimport { PopupHandler } from \"../../controllers/PopupHandler\";\n\nclass App extends Component {\n  controller;\n  static_home;\n  state;\n\n  constructor(props) {\n    super(props);\n\n    // intialise controller object\n    this.controller = new PopupHandler();\n\n    // home view is static component so\n    // it can be pre-rendered\n    this.static_home = (\n      <Home\n        onCreateClicked={() => this.controller.createParty(this.onCreatedParty)}\n        onJoinClicked={this.switchToJoinPage}\n      />\n    );\n\n    this.static_join = (\n      <Join\n        ref={(ref) => (this.joinRef = ref)}\n        onJoinPartyClicked={(partyId) =>\n          this.controller.joinParty(partyId, this.onJoinedParty)\n        }\n      />\n    );\n\n    // initial state\n    this.state = {\n      view: this.static_home,\n    };\n  }\n\n  onCreatedParty = (party) => {\n    if (party[\"error\"] === undefined) {\n      // if party created succesfully\n      this.setState({ view: <Connected party={party} /> });\n    } else {\n      // if party failed to be created\n      this.setState({\n        view: (\n          <Error\n            error={party.error}\n            tryAgain={() => this.setState({ view: this.static_home })}\n          />\n        ),\n      });\n    }\n  };\n\n  onJoinedParty = (party) => {\n    if (party[\"error\"] === undefined) {\n      // if party joined/created succesfully\n      this.setState({ view: <Connected party={party} /> });\n    } else {\n      if (party.code === 100) {\n        // if party doesnt exist just send error to join view\n        this.joinRef.setState({ error: party.error });\n      } else {\n        // if failed to join party\n        this.setState({\n          view: (\n            <Error\n              error={party.error}\n              tryAgain={() => this.setState({ view: this.static_join })}\n            />\n          ),\n        });\n      }\n    }\n  };\n\n  switchToJoinPage = () => {\n    this.setState({ view: this.static_join });\n  };\n\n  componentDidMount = () => {\n    // check if tab has already established a connection\n    this.controller.getConnection((party) => {\n      if (party[\"error\"] === undefined) {\n        this.setState({ view: <Connected party={party} /> });\n      }\n    });\n  };\n\n  render() {\n    return <div className=\"App\">{this.state.view}</div>;\n  }\n}\n\nexport default App;\n","/home/raul/Desktop/emby-party-client/src/views/Sidebar/App.js",[],"/home/raul/Desktop/emby-party-client/src/components/Chat/ChatApp.js",[],"/home/raul/Desktop/emby-party-client/src/components/OTP/OTPInput.js",[],"/home/raul/Desktop/emby-party-client/src/components/Chat/EmojiPicker.js",[],"/home/raul/Desktop/emby-party-client/src/components/Chat/Icons.js",[],["131","132"],"/home/raul/Desktop/emby-party-client/src/components/Sidebar/SidebarWidget.js",[],"/home/raul/Desktop/emby-party-client/src/components/Sidebar/Icons.js",[],"/home/raul/Desktop/emby-party-client/src/components/OTP/OTPOutput.js",[],"/home/raul/Desktop/emby-party-client/src/views/Sidebar/User.js",[],"/home/raul/Desktop/emby-party-client/src/views/Sidebar/Sidebar.js",["133","134"],"import { Component } from \"react\";\n\n// chat app\nimport ChatApp from '../../components/Chat/ChatApp';\nimport SidebarCollapseBtn from '../../components/Sidebar/SidebarCollapseBtn';\nimport User from \"./User\";\n\n// import custom css for chat\nimport './SidebarChat.css';\n\nconst message_type = {\n  LOCAL : \"local\",\n  BROADCAST : \"broadcast\",\n  USER : \"user\",\n}\n\nclass Sidebar extends Component {\nstatic defaultProps = {\n  onToggle : () => console.log(\"sidebar toggle clicked\")\n}\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      view: null,\n    };\n    this.setupEventListeners();\n\n    const user_props = {\n      onDisconnect: () =>\n        this.chatRef.addMessage({\n          message: \"You disconnected from the party.\",\n        }),\n      onPartyCreated: ({ partyId }) => {\n        this.chatRef.addMessage({\n          message: \"You have created a party\",\n          type: message_type.LOCAL,\n        });\n      },\n      onPartyJoined: ({ partyId }) => {\n        this.chatRef.addMessage({\n          message: \"You have joined the party\",\n          type: message_type.LOCAL,\n        });\n      },\n      onUserJoined: ({ user }) =>\n        this.chatRef.addMessage({\n          user,\n          message: \"joined the party\",\n          type: message_type.BROADCAST,\n        }),\n      onUserLeft: ({ user }) =>\n        this.chatRef.addMessage({\n          user,\n          message: \"left\",\n          type: message_type.BROADCAST,\n        }),\n      onUserMessage: ({ user, message }) =>\n        this.chatRef.addMessage({ user, message, type: message_type.USER }),\n    };\n    this.user = new User(user_props);\n  }\n\n  setupEventListeners = () => {\n    const self = this; // used for scoping issues\n    \n  };\n\n\n  renderChatMessage = ({type, message, user=null }) => {\n    switch (type) {\n      case message_type.BROADCAST:\n        return (\n          <div className=\"SidebarChat-message SidebarChat-broadcast\">\n            <p>\n              {user.name ?? \"Anonymous\"} {message}\n            </p>\n          </div>\n        );\n      case message_type.LOCAL:\n        return (\n          <div className=\"SidebarChat-message SidebarChat-local\">\n            <p>{message}</p>\n          </div>\n        );\n      case message_type.USER:\n        return (\n          <div className={`SidebarChat-message SidebarChat-user ${(this.user.socket.id == user.sid) ? \"me\" : \"other\"}`}>\n            <p className=\"SidebarChat-user-name\">{user.name ?? \"Anonymous\"}</p>\n            <p>{message}</p>\n          </div>\n        );\n      default:\n          break;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Sidebar\">\n        <SidebarCollapseBtn onClick={this.props.onToggle}/>\n        <ChatApp\n          ref={(ref) => (this.chatRef = ref)}\n          renderChatMessage={this.renderChatMessage}\n          onSendMessage={(text) => this.user.messageParty(text)}\n        />\n        {/* <Avatar /> */}\n        {/* <Playback /> */}\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","/home/raul/Desktop/emby-party-client/src/components/Sidebar/SidebarCollapseBtn.js",[],"/home/raul/Desktop/emby-party-client/src/video.js",["135","136"],"/*global chrome*/\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './views/Video/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n); \n","/home/raul/Desktop/emby-party-client/src/views/Video/App.js",[],"/home/raul/Desktop/emby-party-client/src/views/Video/VideoPlayer.js",[],"/home/raul/Desktop/emby-party-client/src/views/Popup/JoinPage/Join.js",["137"],"\"use strict\";\n\nimport { Component } from \"react\";\nimport \"./../App.css\";\nimport OTPInput from \"../../../components/OTP/OTPInput\";\nexport class Join extends Component {\n  constructor(props) {\n    super(props);\n\n    const { onJoinPartyClicked } = props;\n    this.onJoinPartyClicked = onJoinPartyClicked;\n    this.state = {\n      error: null,\n    };\n  }\n\n  clearErrors = () => {\n    this.setState({ error: null });\n  };\n\n  render = () => {\n    return (\n      <>\n        <div className=\"App-view\">\n          <p class={\"code-info\"} style={{ margin: \"10px auto\" }}>\n            Get the code for the party you would like to join, any member of the\n            party will be able to share this with you. You can then join the\n            party by pasting the code below, and clicking join.\n          </p>\n          <OTPInput\n            numInputs={6}\n            submitButton={\n              <button style={{ width: \"90%\" }} className=\"App-button\">\n                Join Party\n              </button>\n            }\n            onChange={this.clearErrors}\n            onSubmit={(partyId) => this.onJoinPartyClicked(partyId)}\n          />\n          {this.state.error ? (\n            <p className=\"error\">{this.state.error}</p>\n          ) : null}\n        </div>\n      </>\n    );\n  };\n}\n","/home/raul/Desktop/emby-party-client/src/views/Popup/HomePage/Home.js",["138","139","140"],"\"use strict\";\n\nimport { Component } from \"react\";\nimport \"./../App.css\";\nimport logo from \"../../../assets/emby.png\";\n\nexport class Home extends Component {\n  state = { error: null };\n\n  constructor(props) {\n    super(props);\n    const { onCreateClicked, onJoinClicked } = props;\n  }\n\n  render = () => {\n    return (\n      <>\n        <div className=\"App-header\" display=\"block\">\n          <img src={logo} className=\"App-icon\" alt=\"Emby Party\" />\n          <h1 style={{margin : \"5px auto\"}}>Emby Party</h1>\n        </div>\n        <p className=\"App-info\">Start watching movies together</p>\n        <div className=\"App-view\">\n          <button className=\"App-button\" onClick={this.props.onCreateClicked}>\n            Create Party\n          </button>\n          <button className=\"App-button\" onClick={this.props.onJoinClicked}>\n            Join Party\n          </button>\n        </div>\n      </>\n    );\n  };\n}\n","/home/raul/Desktop/emby-party-client/src/views/Popup/ConnectedPage/Connected.js",["141"],"\"use strict\";\n\nimport { Component } from \"react\";\nimport \"./../App.css\";\nimport OTPOutput from \"../../../components/OTP/OTPOutput\";\n\nexport class Connected extends Component {\n  state = {\n    copyState: false,\n  };\n\n  constructor(props) {\n    super(props);\n    const { party } = props;\n    console.log(party);\n    const { id, video, members } = party;\n    this.partyId = id;\n    this.video = video ? video.name : \"Nothing\";\n    this.members = members.map((member) => (\n      <li class={\"member\"}>{member.name}</li>\n    ));\n  }\n\n  copyToClipboard = (text) => {\n    navigator.clipboard.writeText(text);\n    this.setState({ copyState: true });\n  };\n\n  render = () => {\n    return (\n      <>\n        <div className=\"App-view left\">\n          <h1 style={{ display: \"inline-block\" }} class={\"highlight\"}>\n            Currently Watching :\n          </h1>{\" \"}\n          <h1 style={{ display: \"inline-block\" }} class={\"video-title\"}>\n            {this.video}\n          </h1>\n        </div>\n\n        <div className=\"App-view\">\n          <p class={\"code-info\"} style={{ \"margin\": \"10px auto\" }}>\n            Share the CODE below with others. \n            The recipient(s) can then join the party using the Emby Party extension.\n          </p>\n          <OTPOutput\n            numOutputs={6}\n            output={this.partyId}\n            submitButton={\n              <button className=\"App-button\" style={{ width: \"90%\" }}>\n                {this.state.copyState ? \"Copied\" : \"Copy to clipboard\"}\n              </button>\n            }\n            onSubmit={(partyId) => this.copyToClipboard(partyId)}\n          />\n        </div>\n\n        {/* list all members here */}\n        <div className=\"App-view left\">\n          <h1 class={\"highlight\"}>Members</h1>\n          <ul style={{ \"list-style-type\": \"none\", \"padding-left\": 0 }}>\n            {this.members}\n          </ul>\n        </div>\n      </>\n    );\n  };\n}\n","/home/raul/Desktop/emby-party-client/src/controllers/PopupHandler.js",[],"/home/raul/Desktop/emby-party-client/src/views/Popup/ErrorPage/Error.js",["142"],"'use strict';\n\nimport { Component } from \"react\";\nimport \"./../App.css\";\n\nexport class Error extends Component {\n  \n    constructor(props) {\n    super(props);\n    const { error, tryAgain } = props;\n    this.tryAgain = tryAgain;\n    this.error = error;\n  }\n\n  render = () => {\n    return (\n      <>\n        <button className=\"App-button\" onClick={this.tryAgain}>Try Again</button>\n        <p className=\"error\" style={{textAlign : \"center\"}}>{this.error}</p>\n      </>\n    );\n  };\n\n}\n","/home/raul/Desktop/emby-party-client/src/controllers/BackgroundController.js",["143"],"\"use-strict\";\n\nimport { Member } from \"../adapters/EmbyPartyAdapter\";\n\nexport class BackgroundController {\n  handleJoiningParty = (message, sender, sendResponse) => {\n    const { partyId } = message;\n\n    // code to determine if new tab was able to join party\n    const code = {\n      code: `member.getParty(${partyId});`,\n    };\n\n    // get extension url to video.html file\n    const url = chrome.runtime.getURL(\"video.html\") + \"?party=\" + partyId;\n\n    //create new tab and inject with code\n    chrome.tabs\n      .create({ url })\n      .catch(() => sendResponse({ error: \"Party doesn't exist\" }))\n      .then((tab) => chrome.tabs.executeScript(tab.id, code))\n      .then((resp) => sendResponse(resp[0]))\n      .catch(() => sendResponse({ error: \"Failed to join party\" }));\n  };\n\n  handleCreatingParty = (message, sender, sendResponse) => {\n    // injection code (determines if page has shareable video)\n    const code = {\n      code: 'document.getElementsByTagName(\"VIDEO\").length > 0;',\n    };\n\n    // injection script\n    const script = { file: \"content.js\" };\n\n    chrome.tabs\n      .query({\n        active: true,\n        currentWindow: true,\n      })\n      .then((tabs) => {\n        // execute the code in the active tab\n        return chrome.tabs.executeScript(tabs[0].id, code).then((resp) => {\n          // check if the code injected could find a video\n          if (resp[0] === true) {\n            // inject content script into the page\n            return chrome.tabs.executeScript(tabs[0].id, script);\n          } else {\n            throw new Error();\n          }\n        });\n      })\n      .then((resp) => {\n        sendResponse(resp[0]); //resp[0] should be the party data\n      })\n      .catch(() => {\n        sendResponse({\n          error: \"Could not find a video to share on this page :(\",\n        });\n      });\n  };\n\n  handleGettingParty = (message, sender, sendResponse) => {\n    // code to determine if active page is connected to a party\n    const code = {\n      code: \"member.getParty();\",\n    };\n\n    chrome.tabs\n      .query({ active: true, currentWindow: true })\n      .then((tabs) => {\n        // execute the code in the active tab\n        return chrome.tabs.executeScript(tabs[0].id, code);\n      })\n      .then((resp) => {\n        sendResponse(resp[0]); //resp[0] should be the party data\n      })\n      .catch(() => {\n        sendResponse({ error: \"Party doesn't exist\" });\n      });\n  };\n}\n","/home/raul/Desktop/emby-party-client/src/controllers/UserDataController.js",[],"/home/raul/Desktop/emby-party-client/src/adapters/EmbyPartyAdapter.js",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":6,"column":7,"nodeType":"150","messageId":"151","endLine":6,"endColumn":25},{"ruleId":"152","severity":1,"message":"153","line":1,"column":10,"nodeType":"154","messageId":"155","endLine":1,"endColumn":16},{"ruleId":"156","severity":1,"message":"157","line":1,"column":1,"nodeType":"158","messageId":"159","endLine":1,"endColumn":14,"fix":"160"},{"ruleId":"144","replacedBy":"161"},{"ruleId":"146","replacedBy":"162"},{"ruleId":"148","severity":1,"message":"163","line":66,"column":11,"nodeType":"150","messageId":"151","endLine":66,"endColumn":15},{"ruleId":"164","severity":1,"message":"165","line":89,"column":88,"nodeType":"166","messageId":"167","endLine":89,"endColumn":90},{"ruleId":"152","severity":1,"message":"153","line":1,"column":10,"nodeType":"154","messageId":"155","endLine":1,"endColumn":16},{"ruleId":"148","severity":1,"message":"168","line":1,"column":10,"nodeType":"169","messageId":"151","endLine":1,"endColumn":16},{"ruleId":"156","severity":1,"message":"157","line":1,"column":1,"nodeType":"158","messageId":"159","endLine":1,"endColumn":14,"fix":"170"},{"ruleId":"156","severity":1,"message":"157","line":1,"column":1,"nodeType":"158","messageId":"159","endLine":1,"endColumn":14,"fix":"171"},{"ruleId":"148","severity":1,"message":"172","line":12,"column":13,"nodeType":"150","messageId":"151","endLine":12,"endColumn":28},{"ruleId":"148","severity":1,"message":"173","line":12,"column":30,"nodeType":"150","messageId":"151","endLine":12,"endColumn":43},{"ruleId":"156","severity":1,"message":"157","line":1,"column":1,"nodeType":"158","messageId":"159","endLine":1,"endColumn":14,"fix":"174"},{"ruleId":"156","severity":1,"message":"157","line":1,"column":1,"nodeType":"158","messageId":"159","endLine":1,"endColumn":14,"fix":"175"},{"ruleId":"148","severity":1,"message":"176","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":16},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"no-unused-vars","'userDataController' is assigned a value but never used.","Identifier","unusedVar","no-redeclare","'chrome' is already defined as a built-in global variable.","Block","redeclaredAsBuiltin","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"179","text":"180"},["177"],["178"],"'self' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'chrome' is defined but never used.","Program",{"range":"181","text":"180"},{"range":"182","text":"180"},"'onCreateClicked' is assigned a value but never used.","'onJoinClicked' is assigned a value but never used.",{"range":"183","text":"180"},{"range":"184","text":"180"},"'Member' is defined but never used.","no-global-assign","no-unsafe-negation",[0,13],"",[0,13],[0,13],[0,13],[0,13]]
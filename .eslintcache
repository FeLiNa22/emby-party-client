[{"/home/raul/Desktop/emby-party-client/src/options.js":"1","/home/raul/Desktop/emby-party-client/src/index.js":"2","/home/raul/Desktop/emby-party-client/src/background.js":"3","/home/raul/Desktop/emby-party-client/src/content.js":"4","/home/raul/Desktop/emby-party-client/src/views/Options/App.js":"5","/home/raul/Desktop/emby-party-client/src/views/Popup/App.js":"6","/home/raul/Desktop/emby-party-client/src/views/Sidebar/App.js":"7","/home/raul/Desktop/emby-party-client/src/components/Chat/ChatApp.js":"8","/home/raul/Desktop/emby-party-client/src/components/OTP/OTPInput.js":"9","/home/raul/Desktop/emby-party-client/src/components/Chat/EmojiPicker.js":"10","/home/raul/Desktop/emby-party-client/src/components/Chat/Icons.js":"11","/home/raul/Desktop/emby-party-client/src/components/Sidebar/SidebarWidget.js":"12","/home/raul/Desktop/emby-party-client/src/components/Sidebar/Icons.js":"13","/home/raul/Desktop/emby-party-client/src/components/OTP/OTPOutput.js":"14","/home/raul/Desktop/emby-party-client/src/views/Sidebar/User.js":"15","/home/raul/Desktop/emby-party-client/src/views/Sidebar/Sidebar.js":"16"},{"size":209,"mtime":1609539833384,"results":"17","hashOfConfig":"18"},{"size":207,"mtime":1609539833384,"results":"19","hashOfConfig":"18"},{"size":856,"mtime":1610766173654,"results":"20","hashOfConfig":"18"},{"size":601,"mtime":1610759401184,"results":"21","hashOfConfig":"18"},{"size":494,"mtime":1609539833384,"results":"22","hashOfConfig":"18"},{"size":5801,"mtime":1610767944715,"results":"23","hashOfConfig":"18"},{"size":1889,"mtime":1610758443769,"results":"24","hashOfConfig":"18"},{"size":2551,"mtime":1609968643414,"results":"25","hashOfConfig":"18"},{"size":3651,"mtime":1610143273861,"results":"26","hashOfConfig":"18"},{"size":1455,"mtime":1609967316286,"results":"27","hashOfConfig":"18"},{"size":3245,"mtime":1609959176507,"results":"28","hashOfConfig":"18"},{"size":1113,"mtime":1609904604005,"results":"29","hashOfConfig":"18"},{"size":586,"mtime":1609902854969,"results":"30","hashOfConfig":"18"},{"size":1248,"mtime":1610155190922,"results":"31","hashOfConfig":"18"},{"size":2586,"mtime":1610771227469,"results":"32","hashOfConfig":"18"},{"size":2708,"mtime":1610771347102,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"10o8rmz",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/raul/Desktop/emby-party-client/src/options.js",[],["70","71"],"/home/raul/Desktop/emby-party-client/src/index.js",[],"/home/raul/Desktop/emby-party-client/src/background.js",[],"/home/raul/Desktop/emby-party-client/src/content.js",["72"],"/*global chrome*/\n\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./views/Sidebar/App\";\n\nfunction injectCSS() {\n  var link = document.createElement(\"link\");\n  link.href = chrome.runtime.getURL('/static/css/content.css');\n  link.type = \"text/css\";\n  link.rel = \"stylesheet\";\n\n  document.getElementsByTagName(\"head\")[0].appendChild(link);\n}\n\nfunction injectSidebar() {\n  const injection = document.createElement(\"div\");\n  \n  // injects the sidebar into the page\n  document.body.appendChild(injection);\n\n  // render component\n  ReactDOM.render(<App />, injection);\n};\n\ninjectCSS();\ninjectSidebar();\n","/home/raul/Desktop/emby-party-client/src/views/Options/App.js",[],"/home/raul/Desktop/emby-party-client/src/views/Popup/App.js",["73"],"import React, { Component } from \"react\";\nimport OTPInput from \"../../components/OTP/OTPInput\";\nimport OTPOutput from \"../../components/OTP/OTPOutput\";\n\nimport logo from \"./../../assets/emby.png\";\nimport \"./App.css\";\n\nconst apiServer = \"http://localhost:5000\";\n\n// injection script\nconst script = { file: \"/static/js/content.js\"};\n\nclass App extends Component {\n  static defaultProps = {\n    defaultErrorMessage: \"Oops. Something went wrong... try again in a bit.\",\n    defaultHeader : \"Start watching movies together\"\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      copyState : false,\n      partyId : \"\",\n      view: this.defaultView,\n      headerInfo: this.props.defaultHeader,\n    };\n  }\n\n  setHeader = (text) => {\n    this.setState({headerInfo : text});\n  }\n\n  setView = (view) => {\n    if(view){\n      this.setState({ view });\n    }else{\n      this.setState({view : () => <></>})\n    }\n  };\n\n  hasResponse = (resp) => !chrome.runtime.lastError;\n  hasError = (resp) =>  resp == null || resp.error;\n\n  handleError = (resp) => {\n    try {\n      this.setHeader(resp.error.message);\n    } catch {\n      this.setHeader(this.props.defaultErrorMessage);\n      this.setView();\n    }\n  };\n\n\n  componentDidMount() {\n    const handlePopupMessages = (message, sender, sendResponse) => {\n      console.log(message);\n      switch (message.popup) {\n        case \"joined-party\":\n          if (!this.hasResponse(message) || this.hasError(message)) {\n            this.handleError(message);\n          } else {\n            if (message.data.partyId) {\n              this.setState({partyId : message.data.partyId});\n              this.setHeader(\"Share the code with your friends\");\n              this.setView(this.createdView);\n            }\n          }\n          break;\n        default:\n          break;\n      }\n    }\n    \n    chrome.runtime.onMessage.addListener(function (\n      message,\n      sender,\n      sendResponse\n    ) {\n      if (message && message.popup) {\n        handlePopupMessages(message, sender, sendResponse);\n      }\n    });\n\n    // check if the page already is connected to an emby party session show code for party\n    const handleResponse = (resp) => {\n      if (this.hasResponse(resp)) {\n        if (this.hasError(resp)) {\n          this.handleError(resp);\n        } else {\n          if (resp.data.partyId) {\n            this.setState({partyId : resp.data.partyId});\n            this.setView(this.createdView);\n            this.setHeader(\"Share the code with your friends\");\n          }\n        }\n      }\n    };\n    chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\n      var activeTab = tabs[0];\n      chrome.tabs.sendMessage(activeTab.id,  { content: \"already-connected\" }, handleResponse);\n    });\n  }\n\n  createParty = () => {\n    // inject script into current tab\n    const self = this;\n    chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\n      const activeTab = tabs[0];\n      chrome.tabs.executeScript(activeTab.id, script, function (resp) {\n        if (self.hasResponse(resp)){\n          chrome.tabs.sendMessage(activeTab.id, { content: \"create-party\", data : {url : activeTab.url} });\n        } else {\n          self.setHeader(\"You cannot create a party for this page\");\n          self.setView();\n        }\n      });\n    });\n  };\n\n  // join party is handled in a different manner as it gets\n  // the link to the party and then opens a new tab\n  joinParty = (partyId) => {\n    const endpoint = \"/party/\" + partyId;\n    const handleResponse = (resp) => {\n      if (!this.hasResponse(resp) || this.hasError(resp)) {\n        this.handleError(resp);\n      } else {\n        if (resp.data.status) {\n          this.setHeader( \"You have joined the party\");\n          this.setView();\n         }\n      }\n    };\n\n    // tries to join the party\n    fetch(apiServer + endpoint)\n      .then((resp) => resp.json())\n      .then((resp) => {\n        if (this.hasError(resp)) {\n          this.handleError(resp);\n        } else {\n          // dereference the data object to ensure their is no potentially bad data\n          var {url, partyId} = resp.data;\n          // sends a message to background script\n          // this will in turn open a new tab and execute the script in it\n          chrome.runtime.sendMessage(null,{background : \"join-party\", data : {url, partyId} })\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        this.handleError(err);\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\" display=\"block\">\n          <img src={logo} className=\"App-icon\" alt=\"Emby Party\" />\n          <h1>Emby Party</h1>\n        </div>\n        <p className=\"App-info\">{this.state.headerInfo}</p>\n        <div className=\"App-view\">{this.state.view()}</div>\n      </div>\n    );\n  }\n\n  defaultView = () =>  (\n    <>\n      <button className=\"App-button\" onClick={this.createParty}>\n        Create Party\n      </button>\n      <button\n        className=\"App-button\"\n        onClick={() =>{\n          this.setView(this.joinView);\n        }}\n      >\n        Join Party\n      </button>\n    </>\n  );\n      \n\n  copyToClipboard = (text) => {\n    navigator.clipboard.writeText(text);\n    this.setState({copyState : true});\n  }\n\n  createdView = () => (\n    <>\n      <OTPOutput numOutputs={6} output={this.state.partyId}\n      submitButton={<button className=\"App-button\">{this.state.copyState ? \"Copied\" : \"Copy to clipboard\"}</button>}\n      onSubmit={(partyId) => this.copyToClipboard(partyId)}\n      />\n    </>\n  );\n  \n\n  joinView = () => (\n    <>\n      <OTPInput\n        numInputs={6}\n        submitButton={<button className=\"App-button\">Join Party</button>}\n        onSubmit={(partyId) => this.joinParty(partyId)}\n      />\n    </>\n  );\n    \n}\n\nexport default App;\n","/home/raul/Desktop/emby-party-client/src/views/Sidebar/App.js",[],"/home/raul/Desktop/emby-party-client/src/components/Chat/ChatApp.js",[],"/home/raul/Desktop/emby-party-client/src/components/OTP/OTPInput.js",[],"/home/raul/Desktop/emby-party-client/src/components/Chat/EmojiPicker.js",[],"/home/raul/Desktop/emby-party-client/src/components/Chat/Icons.js",[],["74","75"],"/home/raul/Desktop/emby-party-client/src/components/Sidebar/SidebarWidget.js",[],"/home/raul/Desktop/emby-party-client/src/components/Sidebar/Icons.js",[],"/home/raul/Desktop/emby-party-client/src/components/OTP/OTPOutput.js",[],"/home/raul/Desktop/emby-party-client/src/views/Sidebar/User.js",[],"/home/raul/Desktop/emby-party-client/src/views/Sidebar/Sidebar.js",["76","77","78"],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":10,"nodeType":"85","messageId":"86","endLine":1,"endColumn":16},{"ruleId":"87","severity":1,"message":"88","line":125,"column":11,"nodeType":"89","messageId":"90","endLine":125,"endColumn":25},{"ruleId":"79","replacedBy":"91"},{"ruleId":"81","replacedBy":"92"},{"ruleId":"87","severity":1,"message":"93","line":8,"column":7,"nodeType":"89","messageId":"90","endLine":8,"endColumn":22},{"ruleId":"87","severity":1,"message":"94","line":73,"column":11,"nodeType":"89","messageId":"90","endLine":73,"endColumn":22},{"ruleId":"87","severity":1,"message":"95","line":77,"column":11,"nodeType":"89","messageId":"90","endLine":77,"endColumn":20},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-redeclare","'chrome' is already defined as a built-in global variable.","Block","redeclaredAsBuiltin","no-unused-vars","'handleResponse' is assigned a value but never used.","Identifier","unusedVar",["96"],["97"],"'SERVER_MESSAGES' is assigned a value but never used.","'createParty' is assigned a value but never used.","'joinParty' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]